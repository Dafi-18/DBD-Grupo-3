--Mostrar Alquileres
SELECT Nombre_articulo, Precio_unitario, Descripcion
FROM Articulo
WHERE Tipo_articulo = 'prestamo';
 
--Mostrar Ventas 
SELECT Nombre_articulo, Precio_unitario, Descripcion
FROM Articulo
WHERE Tipo_articulo = 'venta';
 
--Mostrar Prestamos 
SELECT Nombre_articulo, Precio_unitario, Descripcion
FROM Articulo
WHERE Tipo_articulo = 'reservas y alquileres';




-- Control de inventario
-- Para ventas

-- Para ver la cantidad de lapices vendidos hoy dia (Esto funciona para cualquier articulo)
SELECT sum(dv.cantidad) FROM detalle_venta dv 
INNER JOIN venta v 
ON dv.id_venta = v.id_venta AND dv.id_articulo = 'ART74238' AND v.fecha_venta = '2023-12-02';

-- Agregar un nuevo articulo
INSERT INTO Articulo(Id_articulo, Nombre_articulo, Tipo_articulo, Cantidad, Descripcion, Precio_unitario, Disponibilidad) VALUES
('ART12389', 'Cartuchera', 'venta', 5, 'uso para guardar tus utiles escolares', 5.00, 'disponible');

-- Editar cantidad y precio unitario de un artículo (Esto sirve para uno o más campos que se quieran modificar)
UPDATE Articulo SET cantidad = 3 , precio_unitario = 2.50 WHERE Id_articulo = 'ART74238';

-- Eliminar un artículo del inventario
DELETE FROM articulo WHERE id_articulo = 'ART74238';

-- Para prestamos

-- Para ver la cantidad de prestamos activos de calculadoras de una cierta fecha (Esto funciona para cualquier articulo)
SELECT COUNT(*) FROM prestamo WHERE Estado_prestamo = 'No devuelto' AND Fecha_prestamo = '2023-11-03';

-- Agregar un nuevo articulo
INSERT INTO Articulo(Id_articulo, Nombre_articulo, Tipo_articulo, Cantidad, Descripcion, Precio_unitario, Disponibilidad) VALUES
('ART12380', 'Cartuchera', 'prestamo', 5, 'uso para guardar tus utiles escolares', null, 'disponible');

-- Editar cantidad de un artículo
UPDATE Articulo SET cantidad = 3 WHERE Id_articulo = 'ART12380';

-- Eliminar un artículo del inventario
DELETE FROM articulo WHERE id_articulo = 'ART12380';

-- Para alquiler y reserva

-- Para ver el calendario de la losa en la semana
SELECT * FROM calendario ORDER BY fecha, id_hora;

-- Cambiar la disponibilidad de cierto día y hora del calendario (En este caso se quiere modificar del día 01/11/23 de 6:00pm - 7:00pm)
UPDATE calendario SET estado = CASE WHEN estado = 'Ocupado' THEN 'Disponible'
		   							WHEN estado = 'Disponible' THEN 'Ocupado'
							   END 
WHERE id_hora = '11' AND Fecha = '2023-11-01';


-- CONSULTA  de REPORTE PERFIL USUARIO 

SELECT  
    Ar.Nombre_articulo AS Nombre_producto,
    Ar.Tipo_articulo AS Tipo_servicio,
    A.Fecha_alquiler AS Fecha_operacion,
    A.Hora_inicio,
    A.Hora_fin,
	NULL AS Fecha_devolucion,
	A.Monto,
    A.Estado_alquiler AS Estado_operacion
FROM
    Alquiler A
INNER JOIN
	 Usuario U ON A.Id_usuario = U.Id_usuario
INNER JOIN
    Articulo Ar ON A.Id_articulo = Ar.Id_articulo
WHERE
    U.Id_usuario = '1'
	-- AND A.Fecha_alquiler = '2023-11-13'
	
UNION

	-- Consulta para préstamos de artículos
SELECT
    Ar.Nombre_articulo AS Nombre_producto,
    Ar.Tipo_articulo AS Tipo_servicio,
    P.Fecha_prestamo AS Fecha_operacion,
    P.Hora_prestamo AS Hora_inicio, 
	P.Hora_devolucion  As Hora_fin,
    P.Fecha_devolucion, 
	NULL AS Monto,
    P.Estado_prestamo AS Estado_operacion
FROM
    Prestamo P
INNER JOIN
    Usuario U ON P.Id_usuario = U.Id_usuario
INNER JOIN
    Articulo Ar ON P.Id_articulo = Ar.Id_articulo
WHERE
    U.Id_usuario = '1'
	-- AND P.Fecha_prestamo = '2023-11-13'
	
UNION

SELECT
    A.Nombre_articulo AS Nombre_producto,
    A.Tipo_articulo AS Tipo_servicio,
    V.Fecha_venta AS Fecha_operacion,
	NULL AS Hora_inicio,
	NULL AS Hora_fin,
	NULL AS Fecha_devolucion,
    A.Precio_unitario AS Monto,
    V.Estado_pago AS Estado_operacion
FROM
    Detalle_venta DV
INNER JOIN
    Venta V ON DV.Id_venta = V.Id_venta
INNER JOIN
    Articulo A ON DV.Id_articulo = A.Id_articulo
INNER JOIN
    Usuario U ON V.Id_usuario = U.Id_usuario
WHERE
    U.Id_usuario = '1'
	-- AND V.Fecha_venta = '2023-11-13';

-- CONTAR CANTIDAD DE PRESTAMOS DEL USUARIO
SELECT
    COUNT(P.Id_prestamo) AS Cantidad_prestamos
FROM
    Prestamo P
INNER JOIN
    Usuario U ON P.Id_usuario = U.Id_usuario
WHERE
    U.Id_usuario = '1';
	
-- CONTAR CANTIDAD DE VENTAS DEL USUARIO
SELECT
    COUNT(V.Id_venta) AS Cantidad_ventas
FROM
    Venta V
INNER JOIN
    Usuario U ON V.Id_usuario = U.Id_usuario
WHERE
    U.Id_usuario = '1';
	
-- CONTAR CANTIDAD DE ALQUILER DEL USUARIO
SELECT
    COUNT(A.Id_alquiler) AS Cantidad_ventas
FROM
    Alquiler A
INNER JOIN
    Usuario U ON A.Id_usuario = U.Id_usuario
WHERE
    U.Id_usuario = '1';	

-- TOTAL DE SERVICIOS UTILIZADOS POR EL USUARIO
SELECT
    U.Id_usuario,
    U.DNI,
    (
        -- Subconsulta para contar registros de préstamos
        COALESCE((SELECT COUNT(*) FROM Prestamo P WHERE P.Id_usuario = U.Id_usuario), 0) +
        -- Subconsulta para contar registros de ventas
        COALESCE((SELECT COUNT(*) FROM Venta V WHERE V.Id_usuario = U.Id_usuario), 0) +
        -- Subconsulta para contar registros de alquileres
        COALESCE((SELECT COUNT(*) FROM Alquiler A WHERE A.Id_usuario = U.Id_usuario), 0)
    ) AS Total_registros
FROM
    Usuario U
WHERE
    U.Id_usuario = '1';	

-- CANTIDAD DE VENTAS QUE SE REALIZO EN LA PAGINA
SELECT
    COUNT(V.Id_venta) AS Cantidad_ventas
FROM
    Venta V;
	
	
-- CANTIDAD DE PRESTAMOS QUE SE REALIZÓ EN LA PAGINA
SELECT
    COUNT(P.Id_prestamo) AS Cantidad_prestamos
FROM
    Prestamo P;
	
-- CANTIDAD DE ALQUILER QUE SE REALIZÓ EN LA PAGINA
SELECT
    COUNT(A.Id_alquiler) AS Cantidad_ventas
FROM
    Alquiler A;
-- SCRIPTS PARA LAS ENCUESTAS

-- MOSTRAR ENCUESTA 
SELECT Id_encuesta 
	FROM Encuesta E
	WHERE E.Id_encuesta = 'ENC003';
	
-- MOSTRAR ENCUESTA POR FECHA
SELECT Id_encuesta 
	FROM Encuesta E
	WHERE E.Fecha_apertura = '2023-10-13';
	
-- MOSTRAR ENCUESTA POR ESTADO "ACTIVO"

SELECT Id_encuesta 
	FROM Encuesta E
	WHERE E.Estado_encuesta = 'activo';

--CANTIDAD TOTAL DE ENCUESTAS EN LA PAGINA
SELECT
    COUNT(E.Id_encuesta) AS "Encuestas Realizadas"
FROM
    Encuesta E;

--ACTUALIZAR ENCUESTA
UPDATE Encuesta
SET Fecha_apertura = '2023-12-13',
    Fecha_cierre = '2023-12-23',
    Cantidad_preguntas = '9',
    Cantidad_respuestas = '9',
    Estado_encuesta = 'inactivo'
WHERE Id_encuesta = 'ENC002';	

-- AÑADIR encuesta

INSERT INTO Encuesta (Id_encuesta, Id_administrador, Fecha_apertura, Fecha_cierre, Cantidad_preguntas, Cantidad_respuestas, Estado_encuesta) VALUES
('ENC0011', 'ADM005', '2024-01-13', '2024-01-20', 9, 30, 'inactivo');

--SCRIPTS DE PREGUNTA

-- Mostrar pregunta
SELECT P.Id_pregunta, P.Tipo_respuesta
FROM Pregunta P
JOIN Encuesta E ON P.Id_encuesta = E.Id_encuesta
WHERE E.Id_encuesta = 'ENC002';

-- borrar pregunta
DELETE FROM Pregunta
WHERE Id_encuesta = 'id_de_tu_encuesta' AND Id_pregunta = 'id_de_tu_pregunta';

-- actualizar pregunta
UPDATE Pregunta
SET Tipo_respuesta = 'opcion multiple'
WHERE Id_encuesta = 'ENC004' AND Id_pregunta = 'PRE006';

-- añadir pregunta
INSERT INTO Pregunta (Id_pregunta, Id_encuesta, Id_administrador, Tipo_respuesta) VALUES
('PRE0011', 'ENC004', 'ADM004', 'opcion multiple');


-- NOTICIAS

--Mostrar Noticias
SELECT Fecha, Titulo, Descripcion
FROM Noticia;

----ADMIN
--Actualizar noticia
UPDATE Noticia
SET Fecha = '2023-12-27',
    Titulo = 'Voluntariado navideno',
    Descripcion = 'Los alumnos de las FIIS iran a zonas reconditas del Rimac para entregar canastas a pobladores',
WHERE Id_noticia = 'NOT12';	

-- Agregar una nueva noticia

INSERT INTO Noticia((Id_noticia, Id_administrador, Fecha, Titulo, Descripcion) VALUES
(('NOT15', 'ADM004', '2023-12-22', 'Semana navidena', 'La FIIS organizará una chocloatada para los estudiantes');)

-- Quitar noticia
DELETE FROM Noticia WHERE Id_noticia='NOT15';


-- Finanzas
-- Total de Alquileres del mes 
  
SELECT COUNT(*) AS Cantidad_Alquileres
FROM alquiler
WHERE EXTRACT(MONTH FROM Fecha_alquiler) = EXTRACT(MONTH FROM CURRENT_DATE)
	AND EXTRACT(YEAR FROM Fecha_alquiler) = EXTRACT(YEAR FROM CURRENT_DATE);

-- Total de Venta del mes
SELECT COUNT (*) AS Cantidad_venta
From venta
WHERE EXTRACT(MONTH FROM fecha_venta) = EXTRACT(MONTH FROM CURRENT_DATE)
	AND EXTRACT(YEAR FROM fecha_venta) = EXTRACT(YEAR FROM CURRENT_DATE);

-- Total de prestamos del mes
SELECT COUNT (*) AS Cantidad_prestamos
FROM prestamo
WHERE EXTRACT(MONTH FROM fecha_prestamo) = EXTRACT(MONTH FROM CURRENT_DATE)
	AND EXTRACT(YEAR FROM fecha_prestamo) = EXTRACT (YEAR FROM CURRENT_DATE);

-- Total recaudado de alquileres
SELECT SUM(monto) AS Cantidad_Total_Monto_Recaudado_Alquiler
FROM alquiler
WHERE EXTRACT(MONTH FROM Fecha_alquiler) = EXTRACT(MONTH FROM CURRENT_DATE);


-- Total recaudado de ventas
SELECT SUM(monto_final) AS Cantidad_Total_Monto_Recaudado_Venta
FROM venta
WHERE EXTRACT(MONTH FROM fecha_venta) = EXTRACT(MONTH FROM CURRENT_DATE);

-- Total de transacciones del MES
SELECT COUNT(*) AS Total
FROM (
    SELECT 'Alquiler'
    FROM Alquiler
    WHERE EXTRACT(MONTH FROM Fecha_alquiler) = EXTRACT(MONTH FROM CURRENT_DATE)
      AND EXTRACT(YEAR FROM Fecha_alquiler) = EXTRACT(YEAR FROM CURRENT_DATE)
    UNION ALL
    SELECT 'Prestamo'
    FROM Prestamo
    WHERE EXTRACT(MONTH FROM Fecha_prestamo) = EXTRACT(MONTH FROM CURRENT_DATE)
      AND EXTRACT(YEAR FROM Fecha_prestamo) = EXTRACT(YEAR FROM CURRENT_DATE)
    UNION ALL
    SELECT 'Venta'
    FROM Venta
    WHERE EXTRACT(MONTH FROM Fecha_venta) = EXTRACT(MONTH FROM CURRENT_DATE)
      AND EXTRACT(YEAR FROM Fecha_venta) = EXTRACT(YEAR FROM CURRENT_DATE)
) AS transacciones_semana;

-- Cual es el articulo más alquilado
SELECT a.Nombre_articulo
FROM alquiler al
JOIN articulo a ON al.Id_articulo = a.Id_articulo
WHERE EXTRACT(MONTH FROM al.Fecha_alquiler) = EXTRACT(MONTH FROM CURRENT_DATE)
    AND EXTRACT(YEAR FROM al.Fecha_alquiler) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY a.Nombre_articulo
ORDER BY COUNT(*) DESC
LIMIT 1;

SELECT COUNT(*) AS Cantidad_Alquileres
FROM alquiler AS al
JOIN articulo a ON al.Id_articulo = a.Id_articulo
WHERE EXTRACT(MONTH FROM al.Fecha_alquiler) = EXTRACT(MONTH FROM CURRENT_DATE)
    AND EXTRACT(YEAR FROM al.Fecha_alquiler) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY a.Nombre_articulo
ORDER BY COUNT(*) DESC
LIMIT 1;

-- Cual es el articulo menos alquilado

SELECT a.Nombre_articulo
FROM alquiler al
JOIN articulo a ON al.Id_articulo = a.Id_articulo
WHERE EXTRACT(MONTH FROM al.Fecha_alquiler) = EXTRACT(MONTH FROM CURRENT_DATE)
    AND EXTRACT(YEAR FROM al.Fecha_alquiler) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY a.Nombre_articulo
ORDER BY COUNT(*) ASC
LIMIT 1;

SELECT COUNT(*) AS Cantidad_Alquileres
FROM alquiler AS al
JOIN articulo a ON al.Id_articulo = a.Id_articulo
WHERE EXTRACT(MONTH FROM al.Fecha_alquiler) = EXTRACT(MONTH FROM CURRENT_DATE)
    AND EXTRACT(YEAR FROM al.Fecha_alquiler) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY a.Nombre_articulo
ORDER BY COUNT(*) ASC
LIMIT 1;

-- Cual es el articulo más prestado
SELECT a.Nombre_articulo
FROM prestamo p
JOIN articulo a ON p.Id_articulo = a.Id_articulo
WHERE EXTRACT(MONTH FROM p.Fecha_prestamo) = EXTRACT(MONTH FROM CURRENT_DATE)
    AND EXTRACT(YEAR FROM p.Fecha_prestamo) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY a.Nombre_articulo
ORDER BY COUNT(*) DESC
LIMIT 1;

SELECT COUNT(*) AS Cantidad_Prestamos
FROM prestamo AS p
JOIN articulo a ON p.Id_articulo = a.Id_articulo
WHERE EXTRACT(MONTH FROM p.Fecha_prestamo) = EXTRACT(MONTH FROM CURRENT_DATE)
    AND EXTRACT(YEAR FROM p.Fecha_prestamo) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY a.Nombre_articulo
ORDER BY COUNT(*) DESC
LIMIT 1;

-- Cual es el articulo menos prestado 
SELECT a.Nombre_articulo
FROM prestamo p
JOIN articulo a ON p.Id_articulo = a.Id_articulo
WHERE EXTRACT(MONTH FROM p.Fecha_prestamo) = EXTRACT(MONTH FROM CURRENT_DATE)
    AND EXTRACT(YEAR FROM p.Fecha_prestamo) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY a.Nombre_articulo
ORDER BY COUNT(*) ASC
LIMIT 1;

SELECT COUNT(*) AS Cantidad_Prestamos
FROM prestamo AS p
JOIN articulo a ON p.Id_articulo = a.Id_articulo
WHERE EXTRACT(MONTH FROM p.Fecha_prestamo) = EXTRACT(MONTH FROM CURRENT_DATE)
    AND EXTRACT(YEAR FROM p.Fecha_prestamo) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY a.Nombre_articulo
ORDER BY COUNT(*) ASC
LIMIT 1;

-- Cual es el articulo más vendido
SELECT a.Nombre_articulo AS Articulo_Mas_Vendido
FROM articulo a
JOIN (
    SELECT d.Id_articulo, SUM(d.Cantidad) AS Total_Vendido
    FROM detalle_venta d
    GROUP BY d.Id_articulo
    ORDER BY Total_Vendido DESC
    LIMIT 1
) subquery ON a.Id_articulo = subquery.Id_articulo;

-- Cantidad de unidades vendidas por artículo más
SELECT  SUM(d.Cantidad) AS Total_Unidades_Vendidas
FROM articulo a
JOIN detalle_venta d ON a.Id_articulo = d.Id_articulo
GROUP BY a.Nombre_articulo
ORDER BY Total_Unidades_Vendidas DESC
LIMIT 1;

-- Cual es el articulo menos vendido
SELECT a.Nombre_articulo AS Articulo_Mas_Vendido
FROM articulo a
JOIN (
    SELECT d.Id_articulo, SUM(d.Cantidad) AS Total_Vendido
    FROM detalle_venta d
    GROUP BY d.Id_articulo
    ORDER BY Total_Vendido ASC
    LIMIT 1
) subquery ON a.Id_articulo = subquery.Id_articulo;
-- Cantidad de unidades vendidas por artículo menos vendido
SELECT  SUM(d.Cantidad) AS Total_Unidades_Vendidas
FROM articulo a
JOIN detalle_venta d ON a.Id_articulo = d.Id_articulo
GROUP BY a.Nombre_articulo
ORDER BY Total_Unidades_Vendidas DESC
LIMIT 1;


-- FINANZAS
-- FINANZAS

-- Total de transacciones del MES
SELECT COUNT(*) AS Total
FROM (
    SELECT 'Alquiler'
    FROM Alquiler
    WHERE EXTRACT(MONTH FROM Fecha_alquiler) = EXTRACT(MONTH FROM CURRENT_DATE)
      AND EXTRACT(YEAR FROM Fecha_alquiler) = EXTRACT(YEAR FROM CURRENT_DATE)
    UNION ALL
    SELECT 'Prestamo'
    FROM Prestamo
    WHERE EXTRACT(MONTH FROM Fecha_prestamo) = EXTRACT(MONTH FROM CURRENT_DATE)
      AND EXTRACT(YEAR FROM Fecha_prestamo) = EXTRACT(YEAR FROM CURRENT_DATE)
    UNION ALL
    SELECT 'Venta'
    FROM Venta
    WHERE EXTRACT(MONTH FROM Fecha_venta) = EXTRACT(MONTH FROM CURRENT_DATE)
      AND EXTRACT(YEAR FROM Fecha_venta) = EXTRACT(YEAR FROM CURRENT_DATE)
) AS transacciones_semana;

-- Total recaudado de alquiler al mes
SELECT SUM(monto) AS Cantidad_Total_Monto_Recaudado_Alquiler
FROM alquiler
WHERE EXTRACT(MONTH FROM Fecha_alquiler) = EXTRACT(MONTH FROM CURRENT_DATE);

-- total recaudado de ventas al mes
SELECT SUM(monto_final) AS Cantidad_Total_Monto_Recaudado_Venta
FROM venta
WHERE EXTRACT(MONTH FROM fecha_venta) = EXTRACT(MONTH FROM CURRENT_DATE);


-- Total recaudado al mes por alquileres y ventas
SELECT
    COALESCE(SUM(monto) + SUM(monto_final), 0) AS Monto_Total_General
FROM (
    SELECT
        monto,
        0 AS monto_final
    FROM Alquiler
    WHERE EXTRACT(MONTH FROM CURRENT_DATE) = EXTRACT(MONTH FROM fecha_alquiler)

    UNION ALL

    SELECT
        0 AS monto,
        monto_final
    FROM Venta
    WHERE EXTRACT(MONTH FROM CURRENT_DATE) = EXTRACT(MONTH FROM fecha_venta)
) AS CombinedData;


-- Historial de ventas alquileres 
-- REPORTE PARA EL ADMINISTRADOR

-- Consulta para alquileres
SELECT  
    Ar.Nombre_articulo AS Nombre_producto,
    Ar.Tipo_articulo AS Tipo_servicio,
    A.Fecha_alquiler AS Fecha_operacion,
    A.Monto,
    A.Estado_alquiler AS Estado_operacion,
    A.Medio_pago
FROM
    Alquiler A
INNER JOIN
    Articulo Ar ON A.Id_articulo = Ar.Id_articulo
	
UNION

-- Consulta para ventas
SELECT
    A.Nombre_articulo AS Nombre_producto,
    A.Tipo_articulo AS Tipo_servicio,
    V.Fecha_venta AS Fecha_operacion,
    A.Precio_unitario AS Monto,
    V.Estado_pago AS Estado_operacion,
    DV.Medio_pago
FROM
    Detalle_venta DV
INNER JOIN
    Venta V ON DV.Id_venta = V.Id_venta
INNER JOIN
    Articulo A ON DV.Id_articulo = A.Id_articulo;
